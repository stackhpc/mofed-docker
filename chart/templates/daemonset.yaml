{{- range $distro := .Values.distroKernelVersions }}
{{- range $kernelVersion := $distro.kernelVersions }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "mofed-driver.fullname" $ }}-{{ $distro.id }}{{ replace "." "" $distro.version }}-{{ replace "." "-" $kernelVersion }}
  labels:
    {{- include "mofed-driver.labels" $ | nindent 4 }}
    mofed-driver.stackhpc.com/os-id: {{ $distro.id }}
    mofed-driver.stackhpc.com/os-version: {{ $distro.version }}
    mofed-driver.stackhpc.com/kernel-version: {{ $kernelVersion }}
spec:
  selector:
    matchLabels:
      {{- include "mofed-driver.selectorLabels" $ | nindent 6 }}
      mofed-driver.stackhpc.com/distro-id: {{ $distro.id }}
      mofed-driver.stackhpc.com/distro-version: {{ $distro.version }}
      mofed-driver.stackhpc.com/kernel-version: {{ $kernelVersion }}
  template:
    metadata:
      annotations: {{ toYaml $.Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "mofed-driver.selectorLabels" $ | nindent 8 }}
        mofed-driver.stackhpc.com/distro-id: {{ $distro.id }}
        mofed-driver.stackhpc.com/distro-version: {{ $distro.version }}
        mofed-driver.stackhpc.com/kernel-version: {{ $kernelVersion }}
    spec:
      tolerations: {{ toYaml $.Values.tolerations | nindent 8 }}
      hostNetwork: true
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      securityContext: {{ toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $.Chart.Name }}
          image: {{ $.Values.image.repository }}:{{ $.Chart.AppVersion }}-{{ $distro.id }}{{ $distro.version }}-{{ $kernelVersion }}-amd64
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          securityContext: {{ toYaml $.Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: run-mlnx-ofed
              mountPath: /run/mellanox/drivers
              mountPropagation: Bidirectional
            - name: etc-network
              mountPath: /etc/network
            - name: host-etc
              mountPath: /host/etc
            - name: host-udev
              mountPath: /host/lib/udev
          resources: {{ toYaml $.Values.resources | nindent 12 }}
          startupProbe:
            exec:
              command: [sh, -c, 'ls /.driver-ready']
            initialDelaySeconds: {{ $.Values.probes.startup.initialDelaySeconds }}
            failureThreshold: {{ $.Values.probes.startup.failureThreshold }}
            successThreshold: 1
            periodSeconds: {{ $.Values.probes.startup.periodSeconds }}
          livenessProbe:
            exec:
              command: [sh, -c, 'lsmod | grep mlx5_core']
            initialDelaySeconds: {{ $.Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: 1
            successThreshold: 1
            periodSeconds: {{ $.Values.probes.liveness.periodSeconds }}
          readinessProbe:
            exec:
              command: [sh, -c, 'lsmod | grep mlx5_core']
            initialDelaySeconds: {{ $.Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: 1
            periodSeconds: {{ $.Values.probes.readiness.periodSeconds }}
      terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds }}
      volumes:
        - name: run-mlnx-ofed
          hostPath:
            path: /run/mellanox/drivers
        - name: etc-network
          hostPath:
            path: /etc/network
        - name: host-etc
          hostPath:
            path: /etc
        - name: host-udev
          hostPath:
            path: /lib/udev
      nodeSelector:
        {{ $.Values.nodeSelector.archLabel }}: "amd64"
        {{ $.Values.nodeSelector.pciDeviceLabel }}: "true"
        {{ $.Values.nodeSelector.osIdLabel }}: {{ $distro.id | quote }}
        {{ $.Values.nodeSelector.osVersionLabel }}: {{ $distro.version | quote }}
        {{ $.Values.nodeSelector.kernelVersionLabel }}: {{ $kernelVersion | quote }}
{{- end }}
---
# This daemonset is a catch-all for nodes that have a Mellanox NIC but don't have any
# of the kernel versions we have pre-compiled containers for
# In this case, the container can re-compile the OFED drivers for the running kernel,
# but it takes a while
# We still need to target the specific distro, but use a node affinity rule to target
# only nodes that have a kernel version that is not in the list of pre-compiled ones
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "mofed-driver.fullname" $ }}-{{ $distro.id }}{{ replace "." "" $distro.version }}
  labels:
    {{- include "mofed-driver.labels" $ | nindent 4 }}
    mofed-driver.stackhpc.com/os-id: {{ $distro.id }}
    mofed-driver.stackhpc.com/os-version: {{ $distro.version }}
    mofed-driver.stackhpc.com/kernel-version: catchall
spec:
  selector:
    matchLabels:
      {{- include "mofed-driver.selectorLabels" $ | nindent 6 }}
      mofed-driver.stackhpc.com/distro-id: {{ $distro.id }}
      mofed-driver.stackhpc.com/distro-version: {{ $distro.version }}
      mofed-driver.stackhpc.com/kernel-version: catchall
  template:
    metadata:
      annotations: {{ toYaml $.Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "mofed-driver.selectorLabels" $ | nindent 8 }}
        mofed-driver.stackhpc.com/distro-id: {{ $distro.id }}
        mofed-driver.stackhpc.com/distro-version: {{ $distro.version }}
        mofed-driver.stackhpc.com/kernel-version: catchall
    spec:
      tolerations: {{ toYaml $.Values.tolerations | nindent 8 }}
      hostNetwork: true
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      securityContext: {{ toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $.Chart.Name }}
          image: {{ $.Values.image.repository }}:{{ $.Chart.AppVersion }}-{{ $distro.id }}{{ $distro.version }}-{{ last $distro.kernelVersions }}-amd64
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          securityContext: {{ toYaml $.Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: run-mlnx-ofed
              mountPath: /run/mellanox/drivers
              mountPropagation: Bidirectional
            - name: etc-network
              mountPath: /etc/network
            - name: host-etc
              mountPath: /host/etc
            - name: host-udev
              mountPath: /host/lib/udev
          resources: {{ toYaml $.Values.resources | nindent 12 }}
          startupProbe:
            exec:
              command: [sh, -c, 'ls /.driver-ready']
            initialDelaySeconds: {{ $.Values.probes.startup.initialDelaySeconds }}
            failureThreshold: {{ $.Values.probes.startup.failureThresholdRecompilation }}
            successThreshold: 1
            periodSeconds: {{ $.Values.probes.startup.periodSeconds }}
          livenessProbe:
            exec:
              command: [sh, -c, 'lsmod | grep mlx5_core']
            initialDelaySeconds: {{ $.Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: 1
            successThreshold: 1
            periodSeconds: {{ $.Values.probes.liveness.periodSeconds }}
          readinessProbe:
            exec:
              command: [sh, -c, 'lsmod | grep mlx5_core']
            initialDelaySeconds: {{ $.Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: 1
            periodSeconds: {{ $.Values.probes.readiness.periodSeconds }}
      terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds }}
      volumes:
        - name: run-mlnx-ofed
          hostPath:
            path: /run/mellanox/drivers
        - name: etc-network
          hostPath:
            path: /etc/network
        - name: host-etc
          hostPath:
            path: /etc
        - name: host-udev
          hostPath:
            path: /lib/udev
      nodeSelector:
        {{ $.Values.nodeSelector.archLabel }}: "amd64"
        {{ $.Values.nodeSelector.pciDeviceLabel }}: "true"
        {{ $.Values.nodeSelector.osIdLabel }}: {{ $distro.id | quote }}
        {{ $.Values.nodeSelector.osVersionLabel }}: {{ $distro.version | quote }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{ $.Values.nodeSelector.kernelVersionLabel }}
                    operator: NotIn
                    values:
                      {{- range $distro.kernelVersions }}
                      - {{ . | quote }}
                      {{- end }}
{{- end }}
